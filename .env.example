# Required for NextAuth GitHub OAuth
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
NEXTAUTH_SECRET=

# Base application URL used by NextAuth (set automatically on Vercel)
NEXTAUTH_URL=http://localhost:3000

# Production site URL for emails (optional - Vercel sets VERCEL_URL automatically)
# Only needed if you want to override the automatic detection
# Example: https://react.foundation
NEXT_PUBLIC_SITE_URL=

# GitHub Personal Access Token for maintainer progress API and RIS data collection
# Provide a fine-grained or classic personal access token with read:user and public_repo scopes.
# Used for: Maintainer progress tracking, RIS metrics collection
# Get one at: https://github.com/settings/tokens/new
GITHUB_TOKEN=

# Optional: Multiple GitHub tokens for rate limit rotation (comma-separated)
# Each token gets 5,000 requests/hour, so 3 tokens = 15,000 requests/hour
# Format: token1,token2,token3
GITHUB_TOKENS=

# Shopify Storefront API (for fetching products/collections on the frontend)
SHOPIFY_STORE_DOMAIN=your-store.myshopify.com
SHOPIFY_STOREFRONT_TOKEN=

# Shopify Admin API (for management scripts: drops:create, drops:activate, drops:archive)
# Required scopes: read_products, write_products, read_collections, write_collections
SHOPIFY_ADMIN_TOKEN=

# OpenAI API Key for AI image generation and chatbot
# Get one at: https://platform.openai.com/api-keys
OPENAI_API_KEY=

# Optional: override default models for chatbot
# OPENAI_RESPONSE_MODEL defaults to gpt-4.1-mini
# OPENAI_EMBEDDING_MODEL defaults to text-embedding-3-large
OPENAI_RESPONSE_MODEL=
OPENAI_EMBEDDING_MODEL=

# Chatbot vector index configuration (Redis Stack required)
# CHATBOT_REDIS_INDEX defaults to idx:chatbot:chunks
# CHATBOT_REDIS_PREFIX defaults to chatbot:chunk:
CHATBOT_REDIS_INDEX=
CHATBOT_REDIS_PREFIX=

# GitHub repository for chatbot issue filing
CHATBOT_GITHUB_OWNER=
CHATBOT_GITHUB_REPO=

# GitLab OAuth credentials (optional - for GitLab authentication)
# Get these from your GitLab OAuth application settings
GITLAB_CLIENT_ID=
GITLAB_CLIENT_SECRET=

# Redis connection URL for caching RIS metrics and access control
# Required for: Storing library metrics, quarterly allocations, collection status, user allowlist
# Format: redis://[username:password@]host:port[/database]
# Example local: redis://localhost:6379
# Example Upstash: redis://default:password@host.upstash.io:6379
REDIS_URL=redis://localhost:6379

# Enable/disable real RIS data on frontend
# Set to "true" to use real data, "false" to use mock data
NEXT_PUBLIC_RIS_ENABLED=true

# Enable the AI support chatbot
# Set to "true" to render the floating widget
NEXT_PUBLIC_ENABLE_CHATBOT=false

# Coming Soon Page - Access Control
# Super admin email - always has admin access (failsafe)
# This user can bootstrap the system even if Redis is empty
SUPER_ADMIN_EMAIL=your@email.com

# Legacy: Comma-separated list (will be migrated to Redis)
# Users not on this list will see the Coming Soon page
# Example: user1@gmail.com,user2@example.com,admin@company.com
ALLOWED_USERS=

# Resend API Key for access request notifications
# Get one at: https://resend.com/api-keys
RESEND_API_KEY=

# Resend verified domain for from address
# Example: yourdomain.com (without noreply@ prefix)
# Must be verified in Resend dashboard
RESEND_FROM_DOMAIN=yourdomain.com

# Admin email to receive access requests
# This is where access request notifications and chatbot escalations will be sent
ADMIN_EMAIL=
